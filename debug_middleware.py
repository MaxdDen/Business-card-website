#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ middleware –¥–ª—è —è–∑—ã–∫–æ–≤—ã—Ö URL
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.site.middleware import _generate_language_urls

def debug_middleware():
    """–û—Ç–ª–∞–¥–∫–∞ middleware"""
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤—ã—Ö URL...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    test_cases = [
        ("/cms/", "ru"),
        ("/cms/", "en"), 
        ("/cms/", "ua"),
        ("/cms/texts", "ru"),
        ("/cms/en/texts", "en"),
        ("/cms/ua/images", "ua")
    ]
    
    for current_path, current_language in test_cases:
        print(f"\nüìã –ü—É—Ç—å: {current_path}, –Ø–∑—ã–∫: {current_language}")
        
        urls = _generate_language_urls(current_path, current_language)
        
        print("   –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ URL:")
        for lang, url in urls.items():
            print(f"     {lang}: {url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
        print("   –ê–Ω–∞–ª–∏–∑:")
        if current_path.startswith('/cms/'):
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å
            clean_path = current_path
            for lang in ["ru", "en", "ua"]:
                if current_path.startswith(f'/cms/{lang}/'):
                    clean_path = f'/cms{current_path[len(f"/cms/{lang}"):]}'
                    break
                elif current_path == f'/cms/{lang}':
                    clean_path = '/cms/'
                    break
            
            print(f"     –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å: {clean_path}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            for lang, url in urls.items():
                if lang == "ru":  # –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    expected = clean_path
                else:
                    if clean_path == '/cms/':
                        expected = f'/cms/{lang}/'
                    else:
                        sub_path = clean_path[4:] if clean_path.startswith('/cms/') else clean_path
                        expected = f'/cms/{lang}{sub_path}'
                
                if url == expected:
                    print(f"     ‚úÖ {lang}: {url} (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
                else:
                    print(f"     ‚ùå {lang}: {url} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})")

if __name__ == "__main__":
    debug_middleware()