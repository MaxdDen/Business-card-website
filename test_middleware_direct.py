#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.site.middleware import _generate_language_urls

def test_direct_middleware():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç middleware"""
    print("üß™ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç middleware...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    test_cases = [
        ("/cms/", "ru"),
        ("/cms/", "en"), 
        ("/cms/", "ua"),
        ("/cms/texts", "ru"),
        ("/cms/en/texts", "en"),
        ("/cms/ua/images", "ua")
    ]
    
    for current_path, current_language in test_cases:
        print(f"\nüìã –ü—É—Ç—å: {current_path}, –Ø–∑—ã–∫: {current_language}")
        
        try:
            urls = _generate_language_urls(current_path, current_language)
            print(f"   ‚úÖ URL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã: {urls}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —è–∑—ã–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
            expected_languages = ["en", "ua", "ru"]
            for lang in expected_languages:
                if lang in urls:
                    print(f"     ‚úÖ {lang}: {urls[lang]}")
                else:
                    print(f"     ‚ùå {lang}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    test_direct_middleware()
