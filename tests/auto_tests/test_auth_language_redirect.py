#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥

–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ:
1. –°—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: /{lang}/login, /{lang}/register
2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —è–∑—ã–∫–æ–≤—É—é –≤–µ—Ä—Å–∏—é CMS: /{lang}/cms/
3. –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
"""

import requests
import sys
import os
import time
from urllib.parse import urljoin

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

def test_auth_language_redirect():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ –¥–∞—à–±–æ—Ä–¥")
    
    # –ë–∞–∑–æ–≤—ã–π URL
    base_url = "http://127.0.0.1:8000"
    
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
    languages = ["en", "ua", "ru"]
    
    print(f"\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —è–∑—ã–∫–∏: {', '.join(languages)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(f"{base_url}/health", timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
    except requests.exceptions.RequestException:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        return False
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
    print("\nüîç –¢–µ—Å—Ç 1: –°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ")
    for lang in languages:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
        login_url = f"{base_url}/{lang}/login"
        try:
            response = requests.get(login_url, timeout=5)
            if response.status_code == 200:
                print(f"  ‚úÖ {lang}/login -> {response.status_code}")
            else:
                print(f"  ‚ùå {lang}/login -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {lang}/login -> –û—à–∏–±–∫–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        register_url = f"{base_url}/{lang}/register"
        try:
            response = requests.get(register_url, timeout=5)
            if response.status_code == 200:
                print(f"  ‚úÖ {lang}/register -> {response.status_code}")
            else:
                print(f"  ‚ùå {lang}/register -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {lang}/register -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("\nüîç –¢–µ—Å—Ç 2: –†–µ–¥–∏—Ä–µ–∫—Ç—ã –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
    for lang in languages:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ CMS –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        cms_url = f"{base_url}/{lang}/cms/"
        try:
            response = requests.get(cms_url, timeout=5, allow_redirects=False)
            # CMS —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –æ–∂–∏–¥–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω
            if response.status_code in [302, 401]:
                print(f"  ‚úÖ {lang}/cms/ -> {response.status_code} (—Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—É–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç
                if response.status_code == 302:
                    redirect_url = response.headers.get('Location', '')
                    if f'/{lang}/login' in redirect_url:
                        print(f"    ‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ {lang}/login")
                    else:
                        print(f"    ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç: {redirect_url}")
            else:
                print(f"  ‚ùå {lang}/cms/ -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {lang}/cms/ -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("\nüîç –¢–µ—Å—Ç 3: –Ø–∑—ã–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    
    for lang in languages:
        login_url = f"{base_url}/{lang}/login"
        try:
            response = requests.get(login_url, timeout=5)
            if response.status_code == 200:
                content = response.text
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏
                for other_lang in languages:
                    if other_lang != lang:
                        if f'/{other_lang}/login' in content:
                            print(f"  ‚úÖ {lang}/login —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ {other_lang}/login")
                        else:
                            print(f"  ‚ùå {lang}/login –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ {other_lang}/login")
            else:
                print(f"  ‚ùå {lang}/login -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {lang}/login -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ get_language_from_url
    print("\nüîç –¢–µ—Å—Ç 4: –§—É–Ω–∫—Ü–∏—è get_language_from_url")
    
    try:
        from app.auth.routes import get_language_from_url
        from fastapi import Request
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç Request
        class MockRequest:
            def __init__(self, url_path):
                self.url = MockURL(url_path)
        
        class MockURL:
            def __init__(self, path):
                self.path = path
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ URL
        test_urls = [
            ("/en/login", "en"),
            ("/ua/register", "ua"),
            ("/ru/login", "ru"),
            ("/en/", "en"),
            ("/ua/cms/", "ua"),
            ("/ru/cms/texts", "ru"),
            ("/login", "en"),  # –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            ("/unknown/page", "en")  # –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        ]
        
        for url_path, expected_lang in test_urls:
            mock_request = MockRequest(url_path)
            extracted_lang = get_language_from_url(mock_request)
            if extracted_lang == expected_lang:
                print(f"  ‚úÖ {url_path} -> {extracted_lang}")
            else:
                print(f"  ‚ùå {url_path} -> {extracted_lang} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_lang})")
        
    except ImportError as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ get_cms_redirect_url
    print("\nüîç –¢–µ—Å—Ç 5: –§—É–Ω–∫—Ü–∏—è get_cms_redirect_url")
    
    try:
        from app.auth.routes import get_cms_redirect_url
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —è–∑—ã–∫–∏
        test_languages = ["en", "ua", "ru"]
        
        for lang in test_languages:
            redirect_url = get_cms_redirect_url(lang)
            expected_url = f"/{lang}/cms/"
            if redirect_url == expected_url:
                print(f"  ‚úÖ {lang} -> {redirect_url}")
            else:
                print(f"  ‚ùå {lang} -> {redirect_url} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_url})")
        
    except ImportError as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    return True

def test_language_persistence_flow():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞"""
    print("\nüîç –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞")
    
    base_url = "http://127.0.0.1:8000"
    languages = ["en", "ua", "ru"]
    
    for lang in languages:
        print(f"\n  üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –¥–ª—è —è–∑—ã–∫–∞: {lang}")
        
        # 1. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
        login_url = f"{base_url}/{lang}/login"
        try:
            response = requests.get(login_url, timeout=5)
            if response.status_code == 200:
                print(f"    ‚úÖ 1. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: {lang}/login")
                
                # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —è–∑—ã–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
                content = response.text
                for other_lang in languages:
                    if other_lang != lang:
                        if f'/{other_lang}/login' in content:
                            print(f"    ‚úÖ 2. –°—Å—ã–ª–∫–∞ –Ω–∞ {other_lang}/login –Ω–∞–π–¥–µ–Ω–∞")
                        else:
                            print(f"    ‚ùå 2. –°—Å—ã–ª–∫–∞ –Ω–∞ {other_lang}/login –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
                # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ CMS –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É URL
                cms_url = f"{base_url}/{lang}/cms/"
                try:
                    cms_response = requests.get(cms_url, timeout=5, allow_redirects=False)
                    if cms_response.status_code in [302, 401]:
                        print(f"    ‚úÖ 3. CMS –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É URL: {lang}/cms/")
                    else:
                        print(f"    ‚ùå 3. CMS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {lang}/cms/ -> {cms_response.status_code}")
                except requests.exceptions.RequestException as e:
                    print(f"    ‚ùå 3. –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ CMS: {e}")
            else:
                print(f"    ‚ùå 1. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {lang}/login -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"    ‚ùå 1. –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞: {e}")
    
    return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 70)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = True
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    if not test_auth_language_redirect():
        success = False
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫
    if not test_language_persistence_flow():
        success = False
    
    print("\n" + "=" * 70)
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    
    sys.exit(0 if success else 1)
