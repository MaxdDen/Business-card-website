#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ CMS
"""

import requests
import sys
import os
import time
from urllib.parse import urljoin

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

def test_cms_language_persistence():
    """
    –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –≤ CMS
    —è–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ –≤ CMS...")
    
    base_url = "http://localhost:8000"
    
    # –°–ø–∏—Å–æ–∫ CMS —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    cms_pages = [
        "/cms/",
        "/cms/texts", 
        "/cms/images",
        "/cms/seo",
        "/cms/users"
    ]
    
    # –Ø–∑—ã–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    languages = ["ru", "en", "ua"]
    
    # –°–Ω–∞—á–∞–ª–∞ –ª–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ admin
    print("üìù –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...")
    login_data = {
        "email": "admin@example.com",
        "password": "admin123"
    }
    
    session = requests.Session()
    
    # –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    login_page = session.get(f"{base_url}/login")
    if login_page.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞")
        return False
    
    # –ò—â–µ–º CSRF —Ç–æ–∫–µ–Ω –≤ HTML —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    import re
    csrf_token = None
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞ CSRF —Ç–æ–∫–µ–Ω–∞
    csrf_patterns = [
        r'name="csrf_token"[^>]*value="([^"]+)"',
        r'value="([^"]+)"[^>]*name="csrf_token"',
        r'<input[^>]*name="csrf_token"[^>]*value="([^"]+)"',
        r'<input[^>]*value="([^"]+)"[^>]*name="csrf_token"'
    ]
    
    for pattern in csrf_patterns:
        match = re.search(pattern, login_page.text)
        if match:
            csrf_token = match.group(1)
            break
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
    if not csrf_token or csrf_token.strip() == "":
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ CSRF —Ç–æ–∫–µ–Ω")
        print("üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(f"   –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞: {login_page.status_code}")
        print(f"   –†–∞–∑–º–µ—Ä HTML: {len(login_page.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        # –ò—â–µ–º –ª—é–±—ã–µ input –ø–æ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        input_matches = re.findall(r'<input[^>]*>', login_page.text)
        print(f"   –ù–∞–π–¥–µ–Ω–æ input –ø–æ–ª–µ–π: {len(input_matches)}")
        for i, inp in enumerate(input_matches[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"   Input {i+1}: {inp}")
        
        # –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
        print("üîÑ –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞...")
        login_response = session.post(
            f"{base_url}/login",
            data={
                "email": login_data["email"],
                "password": login_data["password"]
            },
            allow_redirects=False
        )
        
        if login_response.status_code in [200, 302]:
            print("‚úÖ –í—Ö–æ–¥ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞ —É—Å–ø–µ—à–µ–Ω")
        else:
            print(f"‚ùå –í—Ö–æ–¥ –±–µ–∑ CSRF —Ç–æ–∫–µ–Ω–∞ —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª—Å—è: {login_response.status_code}")
            print("üîÑ –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å –ø—É—Å—Ç—ã–º CSRF —Ç–æ–∫–µ–Ω–æ–º...")
            # –ü—Ä–æ–±—É–µ–º —Å –ø—É—Å—Ç—ã–º —Ç–æ–∫–µ–Ω–æ–º
            login_response = session.post(
                f"{base_url}/login",
                data={
                    "email": login_data["email"],
                    "password": login_data["password"],
                    "csrf_token": ""
                },
                allow_redirects=False
            )
            
            if login_response.status_code in [200, 302]:
                print("‚úÖ –í—Ö–æ–¥ —Å –ø—É—Å—Ç—ã–º CSRF —Ç–æ–∫–µ–Ω–æ–º —É—Å–ø–µ—à–µ–Ω")
            else:
                print(f"‚ùå –í—Ö–æ–¥ —Å –ø—É—Å—Ç—ã–º CSRF —Ç–æ–∫–µ–Ω–æ–º —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª—Å—è: {login_response.status_code}")
                print("üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞:", login_response.text[:200])
                return False
    else:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥ —Å CSRF —Ç–æ–∫–µ–Ω–æ–º
        print(f"üîë CSRF —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {csrf_token[:10]}...")
        login_response = session.post(
            f"{base_url}/login",
            data={
                "email": login_data["email"],
                "password": login_data["password"],
                "csrf_token": csrf_token
            },
            allow_redirects=False
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –≤—Ö–æ–¥–∞: {login_response.status_code}")
        
        if login_response.status_code not in [200, 302]:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {login_response.status_code}")
            print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {login_response.text[:500]}...")
            return False
        
        print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —è–∑—ã–∫
    for lang in languages:
        print(f"\nüåç –¢–µ—Å—Ç–∏—Ä—É–µ–º —è–∑—ã–∫: {lang.upper()}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É CMS
        for page in cms_pages:
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å —è–∑—ã–∫–æ–≤—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
            if lang == "ru":  # ru - —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞
                test_url = f"{base_url}{page}"
            else:
                test_url = f"{base_url}/cms/{lang}{page[4:]}"  # –ó–∞–º–µ–Ω—è–µ–º /cms/ –Ω–∞ /cms/{lang}/
            
            print(f"  üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_url}")
            
            try:
                response = session.get(test_url)
                
                if response.status_code != 200:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ {response.status_code} –¥–ª—è {test_url}")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —è–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –≤ HTML
                if f'data-lang="{lang}"' in response.text or f'lang="{lang}"' in response.text:
                    print(f"    ‚úÖ –Ø–∑—ã–∫ {lang} –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞
                    if f'value="{lang}"' in response.text or f'>{lang.upper()}<' in response.text:
                        print(f"    ‚úÖ –Ø–∑—ã–∫ {lang} –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ")
                    else:
                        print(f"    ‚ö†Ô∏è  –Ø–∑—ã–∫ {lang} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —è–∑—ã–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
                language_links_found = 0
                for test_lang in languages:
                    if test_lang == "ru":
                        expected_url = f"{base_url}{page}"
                    else:
                        expected_url = f"{base_url}/cms/{test_lang}{page[4:]}"
                    
                    if expected_url in response.text:
                        language_links_found += 1
                
                if language_links_found >= 2:  # –ú–∏–Ω–∏–º—É–º 2 —è–∑—ã–∫–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã
                    print(f"    ‚úÖ –Ø–∑—ã–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ ({language_links_found}/{len(languages)})")
                else:
                    print(f"    ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —è–∑—ã–∫–æ–≤—ã—Ö —Å—Å—ã–ª–æ–∫ ({language_links_found}/{len(languages)})")
                
            except requests.exceptions.RequestException as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
                continue
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞
    for lang in languages:
        print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è —è–∑—ã–∫–∞ {lang.upper()}:")
        
        # –ù–∞—á–∏–Ω–∞–µ–º —Å dashboard
        start_url = f"{base_url}/cms/{lang}/" if lang != "ru" else f"{base_url}/cms/"
        
        try:
            response = session.get(start_url)
            if response.status_code != 200:
                print(f"  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
                continue
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            test_pages = ["/cms/texts", "/cms/images", "/cms/seo"]
            if lang != "ru":
                test_pages = [f"/cms/{lang}{page[4:]}" for page in test_pages]
            
            for page_url in test_pages:
                full_url = f"{base_url}{page_url}"
                print(f"  üîó –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {full_url}")
                
                try:
                    page_response = session.get(full_url)
                    if page_response.status_code == 200:
                        print(f"    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —è–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
                        if f'>{lang.upper()}<' in page_response.text or f'value="{lang}"' in page_response.text:
                            print(f"    ‚úÖ –Ø–∑—ã–∫ {lang} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ")
                        else:
                            print(f"    ‚ö†Ô∏è  –Ø–∑—ã–∫ {lang} –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ")
                    else:
                        print(f"    ‚ùå –û—à–∏–±–∫–∞ {page_response.status_code}")
                        
                except requests.exceptions.RequestException as e:
                    print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
                    
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–æ–≤–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ CMS –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ —è–∑—ã–∫–æ–≤–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤ CMS")
    print("=" * 60)
    
    try:
        success = test_cms_language_persistence()
        
        if success:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
            print("‚úÖ –Ø–∑—ã–∫–æ–≤–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ CMS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
            print("‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
            
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)