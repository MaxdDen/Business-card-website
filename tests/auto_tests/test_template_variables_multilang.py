#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Template Variables
"""

import sys
import os
import requests
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

def test_template_variables_multilang():
    """–¢–µ—Å—Ç –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Template Variables"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ Template Variables...")
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
    languages = ['en', 'ru', 'ua']
    
    for lang in languages:
        print(f"  üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞: {lang}")
        
        # URL –¥–ª—è template-variables —Å —è–∑—ã–∫–æ–≤—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
        url = f"{base_url}/cms/{lang}/template-variables"
        
        try:
            response = requests.get(url, timeout=10)
            
            if response.status_code == 200:
                print(f"    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —è–∑—ã–∫–µ {lang}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
                content = response.text
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                if f'<title>{lang.upper()}' in content or 'Template Variables' in content:
                    print(f"    ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –¥–ª—è {lang}")
                else:
                    print(f"    ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –¥–ª—è {lang}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
                if 'data-language-button' in content:
                    print(f"    ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è {lang}")
                else:
                    print(f"    ‚ùå –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è {lang}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                if 'sync-btn' in content and 'analyze-btn' in content:
                    print(f"    ‚úÖ –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è {lang}")
                else:
                    print(f"    ‚ùå –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è {lang}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                if 'database_variables' in content or 'template_analysis' in content:
                    print(f"    ‚úÖ –°–µ–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è {lang}")
                else:
                    print(f"    ‚ùå –°–µ–∫—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–ª—è {lang}")
                    
            else:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {lang}: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è {lang}: {e}")
    
    print("  üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
    api_endpoints = [
        '/cms/api/template-variables',
        '/cms/api/sync-template-variables',
        '/cms/api/template-analysis'
    ]
    
    for endpoint in api_endpoints:
        try:
            response = requests.get(f"{base_url}{endpoint}", timeout=5)
            if response.status_code in [200, 405]:  # 405 –¥–ª—è POST endpoints
                print(f"    ‚úÖ API endpoint {endpoint} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"    ‚ö†Ô∏è  API endpoint {endpoint} –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞ API endpoint {endpoint}: {e}")
    
    print("  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        import sqlite3
        db_path = project_root / "data" / "app.db"
        
        if db_path.exists():
            conn = sqlite3.connect(str(db_path))
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è template_variables
            cursor.execute("""
                SELECT COUNT(*) FROM texts 
                WHERE page = 'cms_template_variables' 
                AND lang IN ('en', 'ru', 'ua')
            """)
            
            count = cursor.fetchone()[0]
            
            if count > 0:
                print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω–æ {count} –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è template_variables")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏
                required_keys = ['title', 'subtitle', 'sync_variables', 'analyze_templates']
                
                for key in required_keys:
                    cursor.execute("""
                        SELECT COUNT(*) FROM texts 
                        WHERE page = 'cms_template_variables' 
                        AND key = ? AND lang IN ('en', 'ru', 'ua')
                    """, (key,))
                    
                    key_count = cursor.fetchone()[0]
                    if key_count >= 3:  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤
                        print(f"    ‚úÖ –ö–ª—é—á '{key}' –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ –≤—Å–µ —è–∑—ã–∫–∏")
                    else:
                        print(f"    ‚ùå –ö–ª—é—á '{key}' –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–µ –Ω–∞ –≤—Å–µ —è–∑—ã–∫–∏")
            else:
                print("    ‚ùå –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è template_variables –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            conn.close()
        else:
            print("    ‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ Template Variables –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_template_variables_multilang()
