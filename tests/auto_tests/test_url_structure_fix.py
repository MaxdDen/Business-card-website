#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã URL: –¥–æ–º–µ–Ω ‚Üí —è–∑—ã–∫ ‚Üí —Å—Ç—Ä–∞–Ω–∏—Ü–∞

–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
- –ü—É–±–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: /{lang}/about, /{lang}/contacts
- CMS —Å—Ç—Ä–∞–Ω–∏—Ü—ã: /{lang}/cms/texts, /{lang}/cms/images
- –í—Å–µ —è–∑—ã–∫–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å—ã –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
"""

import requests
import sys
import os
import time
from urllib.parse import urljoin

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

def test_url_structure_fix():
    """–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã URL"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã URL: –¥–æ–º–µ–Ω ‚Üí —è–∑—ã–∫ ‚Üí —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    
    # –ë–∞–∑–æ–≤—ã–π URL
    base_url = "http://127.0.0.1:8000"
    
    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
    languages = ["en", "ua", "ru"]
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    public_pages = ["/", "/about", "/catalog", "/contacts"]
    cms_pages = ["/cms/", "/cms/texts", "/cms/images", "/cms/seo", "/cms/users"]
    
    print(f"\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —è–∑—ã–∫–∏: {', '.join(languages)}")
    print(f"üìã –ü—É–±–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {', '.join(public_pages)}")
    print(f"üìã CMS —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {', '.join(cms_pages)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get(f"{base_url}/health", timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
    except requests.exceptions.RequestException:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        return False
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    print("\nüîç –¢–µ—Å—Ç 1: –ü—É–±–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
    for lang in languages:
        for page in public_pages:
            if page == "/":
                url = f"{base_url}/{lang}/"
            else:
                url = f"{base_url}/{lang}{page}"
            
            try:
                response = requests.get(url, timeout=5)
                if response.status_code == 200:
                    print(f"  ‚úÖ {lang}{page} -> {response.status_code}")
                else:
                    print(f"  ‚ùå {lang}{page} -> {response.status_code}")
            except requests.exceptions.RequestException as e:
                print(f"  ‚ùå {lang}{page} -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ CMS —Å—Ç—Ä–∞–Ω–∏—Ü —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    print("\nüîç –¢–µ—Å—Ç 2: CMS —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
    for lang in languages:
        for page in cms_pages:
            # –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: /{lang}/cms/...
            if page == "/cms/":
                url = f"{base_url}/{lang}/cms/"
            else:
                url = f"{base_url}/{lang}{page}"
            
            try:
                response = requests.get(url, timeout=5)
                # CMS —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –æ–∂–∏–¥–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω
                if response.status_code in [200, 302, 401]:
                    print(f"  ‚úÖ {lang}{page} -> {response.status_code}")
                else:
                    print(f"  ‚ùå {lang}{page} -> {response.status_code}")
            except requests.exceptions.RequestException as e:
                print(f"  ‚ùå {lang}{page} -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–¥–æ–ª–∂–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)
    print("\nüîç –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–¥–æ–ª–∂–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)")
    old_cms_urls = [
        "/cms/ru/",
        "/cms/en/", 
        "/cms/ua/",
        "/cms/ru/texts",
        "/cms/en/images"
    ]
    
    for url in old_cms_urls:
        try:
            response = requests.get(f"{base_url}{url}", timeout=5)
            if response.status_code == 404:
                print(f"  ‚úÖ {url} -> 404 (–ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
            else:
                print(f"  ‚ö†Ô∏è  {url} -> {response.status_code} (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {url} -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
    print("\nüîç –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
    for lang in languages:
        url = f"{base_url}/{lang}/"
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏
                content = response.text
                for other_lang in languages:
                    if other_lang != lang:
                        if f'/{other_lang}/' in content:
                            print(f"  ‚úÖ {lang}/ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ {other_lang}/")
                        else:
                            print(f"  ‚ùå {lang}/ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ {other_lang}/")
            else:
                print(f"  ‚ùå {lang}/ -> {response.status_code}")
        except requests.exceptions.RequestException as e:
            print(f"  ‚ùå {lang}/ -> –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
    print("\nüîç –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å –∫–æ—Ä–Ω–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try:
        response = requests.get(f"{base_url}/", timeout=5, allow_redirects=False)
        if response.status_code in [200, 302]:
            print(f"  ‚úÖ / -> {response.status_code}")
        else:
            print(f"  ‚ùå / -> {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå / -> –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã URL –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    return True

def test_middleware_language_extraction():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –∏–∑ URL –≤ middleware"""
    print("\nüîç –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –∏–∑ URL")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ middleware
    try:
        from app.site.middleware import LanguageMiddleware
        from app.site.config import get_supported_languages, get_default_language
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä middleware
        middleware = LanguageMiddleware(None)
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ URL
        test_urls = [
            ("/en/", "en"),
            ("/ua/about", "ua"),
            ("/ru/contacts", "ru"),
            ("/en/cms/", "en"),
            ("/ua/cms/texts", "ua"),
            ("/ru/cms/images", "ru"),
            ("/", get_default_language()),  # –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            ("/unknown/page", get_default_language())  # –î–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        ]
        
        for url, expected_lang in test_urls:
            extracted_lang = middleware.extract_language_from_url(url)
            if extracted_lang == expected_lang:
                print(f"  ‚úÖ {url} -> {extracted_lang}")
            else:
                print(f"  ‚ùå {url} -> {extracted_lang} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected_lang})")
        
        return True
        
    except ImportError as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_url_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –¥–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –¥–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤")
    
    try:
        from app.site.middleware import _generate_language_urls
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—É—Ç–∏
        test_paths = [
            ("/en/", "en"),
            ("/ua/about", "ua"),
            ("/ru/cms/texts", "ru"),
            ("/en/cms/", "en")
        ]
        
        for path, current_lang in test_paths:
            urls = _generate_language_urls(path, current_lang)
            
            print(f"  üìã –ü—É—Ç—å: {path} (—Ç–µ–∫—É—â–∏–π —è–∑—ã–∫: {current_lang})")
            for lang, url in urls.items():
                print(f"    {lang}: {url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —è–∑—ã–∫–∏ –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å—ã
            all_have_prefixes = all(url.startswith(f'/{lang}') for lang, url in urls.items())
            if all_have_prefixes:
                print(f"  ‚úÖ –í—Å–µ —è–∑—ã–∫–∏ –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å—ã")
            else:
                print(f"  ‚ùå –ù–µ –≤—Å–µ —è–∑—ã–∫–∏ –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å—ã")
        
        return True
        
    except ImportError as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã URL")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = True
    
    # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ URL
    if not test_url_structure_fix():
        success = False
    
    # –¢–µ—Å—Ç 2: Middleware
    if not test_middleware_language_extraction():
        success = False
    
    # –¢–µ—Å—Ç 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL
    if not test_url_generation():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ URL —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: –¥–æ–º–µ–Ω ‚Üí —è–∑—ã–∫ ‚Üí —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    
    sys.exit(0 if success else 1)
