#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ login/register —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞
"""

import requests
import sys
import os
import time
import re
from urllib.parse import urljoin

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..'))

def get_csrf_token(session, url):
    """–ü–æ–ª—É—á–∏—Ç—å CSRF —Ç–æ–∫–µ–Ω —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    try:
        response = session.get(url)
        if response.status_code != 200:
            return None
        
        # –ò—â–µ–º CSRF —Ç–æ–∫–µ–Ω –≤ cookies
        for cookie in session.cookies:
            if cookie.name == 'csrftoken':
                return cookie.value
        
        return None
    except Exception as e:
        print(f"    ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è CSRF —Ç–æ–∫–µ–Ω–∞: {e}")
        return None

def test_auth_language_links():
    """–¢–µ—Å—Ç —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    base_url = "http://127.0.0.1:8000"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
    login_data = {
        "email": "admin@example.com",
        "password": "admin123"
    }
    
    session = requests.Session()
    
    try:
        # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
        languages = ["en", "ua", "ru"]
        
        for lang in languages:
            print(f"\nüåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞: {lang.upper()}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
            if lang == "en":
                login_url = f"{base_url}/login"
            else:
                login_url = f"{base_url}/{lang}/login"
            
            print(f"  üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞: {login_url}")
            response = session.get(login_url)
            
            if response.status_code != 200:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞: {response.status_code}")
                continue
            
            print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            print("  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...")
            register_link_match = re.search(r'href="([^"]*register[^"]*)"', response.text)
            if register_link_match:
                register_link = register_link_match.group(1)
                print(f"    üìç –ù–∞–π–¥–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: {register_link}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å
                expected_register_url = "/register" if lang == "en" else f"/{lang}/register"
                if expected_register_url in register_link:
                    print("    ‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å")
                else:
                    print(f"    ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –û–∂–∏–¥–∞–ª—Å—è: {expected_register_url}")
                    return False
            else:
                print("    ‚ùå –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            print("  üìÑ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
            register_response = session.get(f"{base_url}{register_link}")
            
            if register_response.status_code != 200:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {register_response.status_code}")
                continue
            
            print("    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫—É –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ª–æ–≥–∏–Ω
            print("  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ª–æ–≥–∏–Ω...")
            login_link_match = re.search(r'href="([^"]*login[^"]*)"', register_response.text)
            if login_link_match:
                login_link = login_link_match.group(1)
                print(f"    üìç –ù–∞–π–¥–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–∏–Ω: {login_link}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å
                expected_login_url = "/login" if lang == "en" else f"/{lang}/login"
                if expected_login_url in login_link:
                    print("    ‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–∏–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å")
                else:
                    print(f"    ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–∏–Ω. –û–∂–∏–¥–∞–ª—Å—è: {expected_login_url}")
                    return False
            else:
                print("    ‚ùå –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
        
        # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞
        print(f"\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        print("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫–æ–º
        login_ua_url = f"{base_url}/ua/login"
        print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞: {login_ua_url}")
        
        response = session.get(login_ua_url)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞: {response.status_code}")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
        csrf_token = get_csrf_token(session, login_ua_url)
        
        if not csrf_token:
            print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å CSRF —Ç–æ–∫–µ–Ω, –ø—Ä–æ–±—É–µ–º –±–µ–∑ –Ω–µ–≥–æ...")
            login_data_with_csrf = login_data.copy()
        else:
            print("üîë –ü–æ–ª—É—á–µ–Ω CSRF —Ç–æ–∫–µ–Ω")
            login_data_with_csrf = login_data.copy()
            login_data_with_csrf["csrf_token"] = csrf_token
        
        # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
        login_response = session.post(login_ua_url, data=login_data_with_csrf, allow_redirects=False)
        
        if login_response.status_code == 302:
            redirect_url = login_response.headers.get("Location", "")
            print(f"üìç –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞: {redirect_url}")
            
            if "/cms/ua" in redirect_url:
                print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π - –≤–µ–¥–µ—Ç –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫—É—é –≤–µ—Ä—Å–∏—é CMS")
            else:
                print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç - –Ω–µ –≤–µ–¥–µ—Ç –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫—É—é –≤–µ—Ä—Å–∏—é CMS")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {login_response.status_code}")
            return False
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º logout —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞
        print(f"\nüö™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ logout —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —è–∑—ã–∫–∞...")
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ dashboard
        dashboard_url = f"{base_url}/cms/ua"
        dashboard_response = session.get(dashboard_url)
        
        if dashboard_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ dashboard: {dashboard_response.status_code}")
            return False
        
        print("‚úÖ Dashboard –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫—É logout
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ logout...")
        logout_link_match = re.search(r'href="([^"]*logout[^"]*)"', dashboard_response.text)
        if logout_link_match:
            logout_link = logout_link_match.group(1)
            print(f"üìç –ù–∞–π–¥–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ logout: {logout_link}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å (–¥–ª—è —É–∫—Ä–∞–∏–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞)
            expected_logout_url = "/ua/logout"
            if expected_logout_url in logout_link:
                print("‚úÖ –°—Å—ã–ª–∫–∞ logout —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —è–∑—ã–∫–æ–≤–æ–π –ø—Ä–µ—Ñ–∏–∫—Å")
            else:
                print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ logout. –û–∂–∏–¥–∞–ª—Å—è: {expected_logout_url}")
                return False
        else:
            print("‚ùå –°—Å—ã–ª–∫–∞ logout –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ logout
        print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ logout...")
        logout_response = session.get(f"{base_url}{logout_link}", allow_redirects=False)
        
        if logout_response.status_code == 302:
            redirect_url = logout_response.headers.get("Location", "")
            print(f"üìç –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ logout: {redirect_url}")
            
            if "/ua/login" in redirect_url:
                print("‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ logout –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π - –≤–µ–¥–µ—Ç –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞")
            else:
                print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ logout")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ logout: {logout_response.status_code}")
            return False
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:8000")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    finally:
        # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        try:
            session.post(f"{base_url}/logout")
        except:
            pass

def test_auth_routes():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —è–∑—ã–∫–æ–≤—ã—Ö —Ä–æ—É—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö —Ä–æ—É—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    base_url = "http://127.0.0.1:8000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —è–∑—ã–∫–æ–≤—ã–µ —Ä–æ—É—Ç—ã
    test_routes = [
        ("/ua/login", "—É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞"),
        ("/ru/login", "—Ä—É—Å—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞"),
        ("/en/login", "–∞–Ω–≥–ª–∏–π—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞"),
        ("/ua/register", "—É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"),
        ("/ru/register", "—Ä—É—Å—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"),
        ("/en/register", "–∞–Ω–≥–ª–∏–π—Å–∫–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"),
        ("/ua/logout", "—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π logout"),
        ("/ru/logout", "—Ä—É—Å—Å–∫–∏–π logout"),
        ("/en/logout", "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π logout")
    ]
    
    for route, description in test_routes:
        full_url = f"{base_url}{route}"
        print(f"  üìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {description}: {route}")
        
        try:
            response = requests.get(full_url, allow_redirects=False)
            
            if response.status_code == 200:
                print(f"    ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            elif response.status_code == 302:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤–µ–¥–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
                redirect_url = response.headers.get("Location", "")
                if "/login" in redirect_url:
                    print(f"    ‚úÖ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)")
                else:
                    print(f"    ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç: {redirect_url}")
            else:
                print(f"    ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get("http://127.0.0.1:8000/health", timeout=5)
        if response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ /health")
            return False
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://127.0.0.1:8000")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: python -m uvicorn app.main:app --reload")
        return False
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = True
    
    # –¢–µ—Å—Ç —è–∑—ã–∫–æ–≤—ã—Ö —Ä–æ—É—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    test_auth_routes()
    
    # –¢–µ—Å—Ç —è–∑—ã–∫–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if not test_auth_language_links():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –Ø–∑—ã–∫–æ–≤—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –°—Å—ã–ª–∫–∏ –º–µ–∂–¥—É login/register —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —è–∑—ã–∫")
        print("‚úÖ Logout –≤–µ–¥–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —è–∑—ã–∫–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
    
    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
