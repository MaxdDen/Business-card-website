#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–≠—Ç–∞–ø 8)
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
- API endpoints –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
- –ü—Ä–æ–≤–µ—Ä–∫—É —Ä–æ–ª–∏ admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
- –°–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- UI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""

import requests
import json
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

class UsersManagementTest:
    def __init__(self, base_url="http://localhost:8000"):
        self.base_url = base_url
        self.session = requests.Session()
        self.admin_token = None
        self.editor_token = None
        self.test_user_id = None
        
    def log(self, message):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        print(f"[{timestamp}] {message}")
    
    def login_admin(self):
        """–í—Ö–æ–¥ –ø–æ–¥ admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        self.log("üîê –í—Ö–æ–¥ –ø–æ–¥ admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...")
        
        # –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        register_data = {
            "email": "admin@test.com",
            "password": "admin123456"
        }
        
        try:
            response = self.session.post(f"{self.base_url}/register", data=register_data)
            if response.status_code == 200:
                self.log("‚úÖ Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            else:
                self.log("‚ÑπÔ∏è Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except:
            pass
        
        # –í—Ö–æ–¥–∏–º –ø–æ–¥ admin
        login_data = {
            "email": "admin@test.com",
            "password": "admin123456"
        }
        
        response = self.session.post(f"{self.base_url}/login", data=login_data)
        if response.status_code == 200:
            self.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ø–æ–¥ admin")
            return True
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ–¥ admin: {response.status_code}")
            return False
    
    def login_editor(self):
        """–í—Ö–æ–¥ –ø–æ–¥ editor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
        self.log("üîê –í—Ö–æ–¥ –ø–æ–¥ editor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...")
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º editor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ admin
        if not self.admin_token:
            self.log("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ admin —Ç–æ–∫–µ–Ω—É")
            return False
        
        editor_data = {
            "email": "editor@test.com",
            "password": "editor123456",
            "role": "editor"
        }
        
        response = self.session.post(f"{self.base_url}/cms/api/users", data=editor_data)
        if response.status_code == 200:
            self.log("‚úÖ Editor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω")
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è editor –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.status_code}")
            return False
        
        # –í—Ö–æ–¥–∏–º –ø–æ–¥ editor
        login_data = {
            "email": "editor@test.com",
            "password": "editor123456"
        }
        
        response = self.session.post(f"{self.base_url}/login", data=login_data)
        if response.status_code == 200:
            self.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ø–æ–¥ editor")
            return True
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ–¥ editor: {response.status_code}")
            return False
    
    def test_get_users_admin(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin)"""
        self.log("üìã –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin)...")
        
        response = self.session.get(f"{self.base_url}/cms/api/users")
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                users = data.get("users", [])
                self.log(f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                return True
            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data.get('message')}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_get_users_editor(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (editor) - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω"""
        self.log("üö´ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (editor) - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω...")
        
        response = self.session.get(f"{self.base_url}/cms/api/users")
        if response.status_code == 403:
            self.log("‚úÖ –î–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è editor")
            return True
        else:
            self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    
    def test_create_user(self):
        """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.log("üë§ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        user_data = {
            "email": "testuser@example.com",
            "password": "testpass123",
            "role": "editor"
        }
        
        response = self.session.post(f"{self.base_url}/cms/api/users", data=user_data)
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                self.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                return True
            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data.get('message')}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_create_user_long_password(self):
        """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–ª–∏–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω)"""
        self.log("üîí –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–ª–∏–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–æ–ª—å –¥–ª–∏–Ω–Ω–µ–µ 72 —Å–∏–º–≤–æ–ª–æ–≤
        long_password = "a" * 80
        
        user_data = {
            "email": "longpass@example.com",
            "password": long_password,
            "role": "editor"
        }
        
        response = self.session.post(f"{self.base_url}/cms/api/users", data=user_data)
        if response.status_code == 200:
            data = response.json()
            if not data.get("success") and "72 –±–∞–π—Ç–æ–≤" in data.get("message", ""):
                self.log("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–ª–∏–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º")
                return True
            else:
                self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {data}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_create_duplicate_user(self):
        """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email"""
        self.log("üîÑ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email...")
        
        user_data = {
            "email": "testuser@example.com",  # –¢–æ—Ç –∂–µ email
            "password": "testpass123",
            "role": "editor"
        }
        
        response = self.session.post(f"{self.base_url}/cms/api/users", data=user_data)
        if response.status_code == 200:
            data = response.json()
            if not data.get("success") and "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in data.get("message", ""):
                self.log("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–∞")
                return True
            else:
                self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {data}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_create_user_editor_access(self):
        """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è editor'–æ–º - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω"""
        self.log("üö´ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è editor'–æ–º - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω...")
        
        user_data = {
            "email": "unauthorized@example.com",
            "password": "testpass123",
            "role": "editor"
        }
        
        response = self.session.post(f"{self.base_url}/cms/api/users", data=user_data)
        if response.status_code == 403:
            self.log("‚úÖ –î–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è editor")
            return True
        else:
            self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    
    def test_reset_password(self):
        """–¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.log("üîë –¢–µ—Å—Ç —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = self.session.get(f"{self.base_url}/cms/api/users")
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                users = data.get("users", [])
                test_user = None
                for user in users:
                    if user["email"] == "testuser@example.com":
                        test_user = user
                        break
                
                if test_user:
                    self.test_user_id = test_user["id"]
                    self.log(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: {self.test_user_id}")
                    
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
                    reset_data = {
                        "new_password": "newpassword123"
                    }
                    
                    response = self.session.post(f"{self.base_url}/cms/api/users/{self.test_user_id}/reset-password", data=reset_data)
                    if response.status_code == 200:
                        data = response.json()
                        if data.get("success"):
                            self.log("‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω")
                            return True
                        else:
                            self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è: {data.get('message')}")
                            return False
                    else:
                        self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
                        return False
                else:
                    self.log("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False
            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data.get('message')}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_delete_user(self):
        """–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.log("üóëÔ∏è –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        
        if not self.test_user_id:
            self.log("‚ùå –ù–µ—Ç ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return False
        
        response = self.session.delete(f"{self.base_url}/cms/api/users/{self.test_user_id}")
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                self.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                return True
            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data.get('message')}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_delete_self(self):
        """–¢–µ—Å—Ç –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å–µ–±—è"""
        self.log("üîÑ –¢–µ—Å—Ç –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å–µ–±—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ ID admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        response = self.session.get(f"{self.base_url}/cms/api/users")
        if response.status_code == 200:
            data = response.json()
            if data.get("success"):
                users = data.get("users", [])
                admin_user = None
                for user in users:
                    if user["email"] == "admin@test.com":
                        admin_user = user
                        break
                
                if admin_user:
                    admin_id = admin_user["id"]
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
                    response = self.session.delete(f"{self.base_url}/cms/api/users/{admin_id}")
                    if response.status_code == 200:
                        data = response.json()
                        if not data.get("success") and "—Å–∞–º–æ–≥–æ —Å–µ–±—è" in data.get("message", ""):
                            self.log("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å–µ–±—è")
                            return True
                        else:
                            self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {data}")
                            return False
                    else:
                        self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
                        return False
                else:
                    self.log("‚ùå Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False
            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data.get('message')}")
                return False
        else:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    
    def test_users_page_access(self):
        """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
        self.log("üåê –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")
        
        # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ admin
        response = self.session.get(f"{self.base_url}/cms/users")
        if response.status_code == 200:
            self.log("‚úÖ Admin –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        else:
            self.log(f"‚ùå Admin –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞: {response.status_code}")
            return False
        
        return True
    
    def test_users_page_editor_access(self):
        """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ editor –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω"""
        self.log("üö´ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ editor –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")
        
        response = self.session.get(f"{self.base_url}/cms/users")
        if response.status_code == 403:
            self.log("‚úÖ –î–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è editor")
            return True
        else:
            self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    
    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        self.log("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        self.log("=" * 60)
        
        tests = []
        
        # –¢–µ—Å—Ç—ã —Å admin –¥–æ—Å—Ç—É–ø–æ–º
        self.log("\nüìã –¢–ï–°–¢–´ –° ADMIN –î–û–°–¢–£–ü–û–ú:")
        self.log("-" * 40)
        
        if self.login_admin():
            tests.append(("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin)", self.test_get_users_admin()))
            tests.append(("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", self.test_create_user()))
            tests.append(("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–ª–∏–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º", self.test_create_user_long_password()))
            tests.append(("–°–æ–∑–¥–∞–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", self.test_create_duplicate_user()))
            tests.append(("–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", self.test_reset_password()))
            tests.append(("–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", self.test_delete_user()))
            tests.append(("–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å–µ–±—è", self.test_delete_self()))
            tests.append(("–î–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin)", self.test_users_page_access()))
        else:
            self.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –ø–æ–¥ admin, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã")
        
        # –¢–µ—Å—Ç—ã —Å editor –¥–æ—Å—Ç—É–ø–æ–º
        self.log("\nüìã –¢–ï–°–¢–´ –° EDITOR –î–û–°–¢–£–ü–û–ú:")
        self.log("-" * 40)
        
        if self.login_editor():
            tests.append(("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (editor)", self.test_get_users_editor()))
            tests.append(("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (editor)", self.test_create_user_editor_access()))
            tests.append(("–î–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (editor)", self.test_users_page_editor_access()))
        else:
            self.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –ø–æ–¥ editor, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        self.log("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        self.log("=" * 60)
        
        passed = 0
        total = len(tests)
        
        for test_name, result in tests:
            status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
            self.log(f"{status}: {test_name}")
            if result:
                passed += 1
        
        self.log(f"\nüìà –ò–¢–û–ì–û: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed == total:
            self.log("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
            return True
        else:
            self.log(f"‚ö†Ô∏è –ü–†–û–í–ê–õ–ï–ù–û {total - passed} —Ç–µ—Å—Ç–æ–≤")
            return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤"""
    print("üß™ –ê–í–¢–û–¢–ï–°–¢ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò")
    print("=" * 60)
    print("–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:")
    print("‚Ä¢ API endpoints –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫—É —Ä–æ–ª–∏ admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞")
    print("‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("‚Ä¢ UI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    print("‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ø–æ —Ä–æ–ª—è–º")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return False
    except:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
        return False
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test = UsersManagementTest()
    success = test.run_all_tests()
    
    if success:
        print("\nüéØ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –≠—Ç–∞–ø 8 —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ.")
        return True
    else:
        print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
