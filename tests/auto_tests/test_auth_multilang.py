#!/usr/bin/env python3
"""
–ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤ –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ login.html –∏ register.html
"""

import sys
import os
import requests
import traceback
from urllib.parse import urljoin

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..')))

def test_server_running():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return True
        else:
            print(f"   ‚ùå –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: {e}")
        return False

def test_login_page_multilang():
    """–¢–µ—Å—Ç –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞...")
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
        languages = ['en', 'ru', 'ua']
        base_url = "http://localhost:8000"
        
        for lang in languages:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º —è–∑—ã–∫: {lang}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞ —Å —è–∑—ã–∫–æ–≤—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
            login_url = f"{base_url}/{lang}/login" if lang != 'en' else f"{base_url}/login"
            response = requests.get(login_url, timeout=10)
            
            if response.status_code != 200:
                print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —è–∑—ã–∫–∞ {lang}: {response.status_code}")
                return False
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
            if 'switchLanguage' not in response.text and 'data-language-button' not in response.text:
                print(f"   ‚ùå –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {lang}")
                return False
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            for check_lang in languages:
                if f'switchLanguage(\'{check_lang}\')' not in response.text:
                    print(f"   ‚ùå –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —è–∑—ã–∫ {check_lang} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {lang}")
                    return False
                    
            print(f"   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –¥–ª—è —è–∑—ã–∫–∞ {lang} —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("   ‚úÖ –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ –ª–æ–≥–∏–Ω–∞: {e}")
        traceback.print_exc()
        return False

def test_register_page_multilang():
    """–¢–µ—Å—Ç –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...")
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
        languages = ['en', 'ru', 'ua']
        base_url = "http://localhost:8000"
        
        for lang in languages:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º —è–∑—ã–∫: {lang}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —è–∑—ã–∫–æ–≤—ã–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
            register_url = f"{base_url}/{lang}/register" if lang != 'en' else f"{base_url}/register"
            response = requests.get(register_url, timeout=10)
            
            if response.status_code != 200:
                print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —è–∑—ã–∫–∞ {lang}: {response.status_code}")
                return False
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
            if 'switchLanguage' not in response.text and 'data-language-button' not in response.text:
                print(f"   ‚ùå –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {lang}")
                return False
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —è–∑—ã–∫–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            for check_lang in languages:
                if f'switchLanguage(\'{check_lang}\')' not in response.text:
                    print(f"   ‚ùå –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —è–∑—ã–∫ {check_lang} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {lang}")
                    return False
                    
            print(f"   ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è —è–∑—ã–∫–∞ {lang} —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("   ‚úÖ –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        traceback.print_exc()
        return False

def test_language_switching():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤...")
    try:
        base_url = "http://localhost:8000"
        languages = ['en', 'ru', 'ua']
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –∫–∞–∂–¥—É—é
        pages = ['login', 'register']
        
        for page in pages:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page}")
            
            for from_lang in languages:
                for to_lang in languages:
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∏—Å—Ö–æ–¥–Ω—ã–º —è–∑—ã–∫–æ–º
                    from_url = f"{base_url}/{from_lang}/{page}" if from_lang != 'en' else f"{base_url}/{page}"
                    response = requests.get(from_url, timeout=10)
                    
                    if response.status_code != 200:
                        print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ {from_url} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                        continue
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫
                    if f'switchLanguage(\'{to_lang}\')' in response.text:
                        print(f"   ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å {from_lang} –Ω–∞ {to_lang} –¥–ª—è {page} —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    else:
                        print(f"   ‚ùå –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å {from_lang} –Ω–∞ {to_lang} –¥–ª—è {page} –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                        return False
        
        print("   ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤: {e}")
        traceback.print_exc()
        return False

def test_translation_consistency():
    """–¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤...")
    try:
        base_url = "http://localhost:8000"
        languages = ['en', 'ru', 'ua']
        pages = ['login', 'register']
        
        # –ö–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã
        translation_keys = [
            'title', 'subtitle', 'email', 'password', 'login_button', 'create_account',
            'already_have_account', 'sign_in', 'password_label', 'confirm_password'
        ]
        
        for page in pages:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page}")
            
            for lang in languages:
                url = f"{base_url}/{lang}/{page}" if lang != 'en' else f"{base_url}/{page}"
                response = requests.get(url, timeout=10)
                
                if response.status_code != 200:
                    print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ {url} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
                for key in translation_keys:
                    if f"{{{{ t.{key}" in response.text:
                        print(f"   ‚úÖ –ö–ª—é—á –ø–µ—Ä–µ–≤–æ–¥–∞ {key} –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page} ({lang})")
                    else:
                        print(f"   ‚ö†Ô∏è  –ö–ª—é—á –ø–µ—Ä–µ–≤–æ–¥–∞ {key} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page} ({lang})")
        
        print("   ‚úÖ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {e}")
        traceback.print_exc()
        return False

def test_responsive_design():
    """–¢–µ—Å—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–∏–∑–∞–π–Ω–∞...")
    try:
        base_url = "http://localhost:8000"
        languages = ['en', 'ru', 'ua']
        pages = ['login', 'register']
        
        for page in pages:
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {page}")
            
            for lang in languages:
                url = f"{base_url}/{lang}/{page}" if lang != 'en' else f"{base_url}/{page}"
                response = requests.get(url, timeout=10)
                
                if response.status_code != 200:
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
                responsive_classes = [
                    'min-h-screen', 'flex', 'items-center', 'justify-center',
                    'w-full', 'max-w-md', 'space-y-6', 'space-y-4'
                ]
                
                for css_class in responsive_classes:
                    if css_class in response.text:
                        print(f"   ‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å {css_class} –Ω–∞–π–¥–µ–Ω")
                    else:
                        print(f"   ‚ö†Ô∏è  –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å {css_class} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print("   ‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 60)
    
    tests = [
        ("–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞", test_server_running),
        ("–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞", test_login_page_multilang),
        ("–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", test_register_page_multilang),
        ("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤", test_language_switching),
        ("–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤", test_translation_consistency),
        ("–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–∏–∑–∞–π–Ω–∞", test_responsive_design),
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        print(f"\nüìã {test_name}")
        print("-" * 40)
        try:
            if test_func():
                passed += 1
                print(f"‚úÖ {test_name} - –ü–†–û–ô–î–ï–ù")
            else:
                print(f"‚ùå {test_name} - –ü–†–û–í–ê–õ–ï–ù")
        except Exception as e:
            print(f"‚ùå {test_name} - –û–®–ò–ë–ö–ê: {e}")
            traceback.print_exc()
    
    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return True
    else:
        print(f"‚ö†Ô∏è  {total - passed} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
