# Makefile –¥–ª—è CMS —Å–∞–π—Ç–∞-–≤–∏–∑–∏—Ç–∫–∏
# –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

.PHONY: help dev run tailwind-watch lint install clean test

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
BLUE=\033[0;34m
RED=\033[0;31m
NC=\033[0m # No Color

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–°
ifeq ($(OS),Windows_NT)
    DETECTED_OS := Windows
    PYTHON := python
    PIP := pip
    NPM := npm
    ACTIVATE := venv\Scripts\activate
    SEP := \\
else
    DETECTED_OS := $(shell uname -s)
    PYTHON := python3
    PIP := pip3
    NPM := npm
    ACTIVATE := source venv/bin/activate
    SEP := /
endif

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)üöÄ CMS –¥–ª—è —Å–∞–π—Ç–∞-–≤–∏–∑–∏—Ç–∫–∏$(NC)"
	@echo ""
	@echo "$(BLUE)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  $(YELLOW)dev$(NC)           - –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å–µ—Ä–≤–µ—Ä + Tailwind watcher)"
	@echo "  $(YELLOW)run$(NC)            - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ FastAPI —Å–µ—Ä–≤–µ—Ä–∞"
	@echo "  $(YELLOW)tailwind-watch$(NC) - –ó–∞–ø—É—Å–∫ Tailwind CSS watcher"
	@echo "  $(YELLOW)lint$(NC)           - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
	@echo "  $(YELLOW)install$(NC)        - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "  $(YELLOW)clean$(NC)          - –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
	@echo "  $(YELLOW)test$(NC)           - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo ""
	@echo "$(BLUE)–û–°: $(DETECTED_OS)$(NC)"

dev: ## –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å–µ—Ä–≤–µ—Ä + Tailwind watcher)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ CMS –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
ifeq ($(DETECTED_OS),Windows)
	@powershell -ExecutionPolicy Bypass -File dev.ps1
else
	@echo "$(YELLOW)–ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\dev.ps1$(NC)"
	@echo "$(YELLOW)–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—Ä—É—á–Ω—É—é:$(NC)"
	@echo "  $(BLUE)make install$(NC)"
	@echo "  $(BLUE)make tailwind-watch &$(NC)"
	@echo "  $(BLUE)make run$(NC)"
endif

run: ## –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ FastAPI —Å–µ—Ä–≤–µ—Ä–∞
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...$(NC)"
ifeq ($(DETECTED_OS),Windows)
	@powershell -ExecutionPolicy Bypass -File run.ps1
else
	@echo "$(YELLOW)–ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\run.ps1$(NC)"
	@echo "$(YELLOW)–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:$(NC)"
	@echo "  $(BLUE)uvicorn app.main:app --host 0.0.0.0 --port 8000$(NC)"
endif

tailwind-watch: ## –ó–∞–ø—É—Å–∫ Tailwind CSS watcher
	@echo "$(GREEN)üé® –ó–∞–ø—É—Å–∫ Tailwind CSS watcher...$(NC)"
ifeq ($(DETECTED_OS),Windows)
	@powershell -ExecutionPolicy Bypass -File tailwind-watch.ps1
else
	@echo "$(YELLOW)–ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\tailwind-watch.ps1$(NC)"
	@echo "$(YELLOW)–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:$(NC)"
	@echo "  $(BLUE)npm run tailwind:watch$(NC)"
endif

lint: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
	@echo "$(GREEN)üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞...$(NC)"
ifeq ($(DETECTED_OS),Windows)
	@powershell -ExecutionPolicy Bypass -File lint.ps1
else
	@echo "$(YELLOW)–ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\lint.ps1$(NC)"
	@echo "$(YELLOW)–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:$(NC)"
	@echo "  $(BLUE)pip install flake8 black isort$(NC)"
	@echo "  $(BLUE)flake8 app/ --max-line-length=120$(NC)"
	@echo "  $(BLUE)black app/ --check --line-length=120$(NC)"
	@echo "  $(BLUE)isort app/ --check-only --profile black$(NC)"
endif

install: ## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä—è–µ–º Python...$(NC)"
	@$(PYTHON) --version
	@echo "$(BLUE)–°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...$(NC)"
	@$(PYTHON) -m venv venv
ifeq ($(DETECTED_OS),Windows)
	@echo "$(BLUE)–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...$(NC)"
	@venv\Scripts\activate && pip install -r requirements.txt
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	@$(NPM) install
else
	@echo "$(BLUE)–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...$(NC)"
	@$(ACTIVATE) && $(PIP) install -r requirements.txt
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	@$(NPM) install
endif
	@echo "$(BLUE)–°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...$(NC)"
	@mkdir -p data uploads/originals uploads/optimized cache/renders
	@echo "$(BLUE)–°–æ–±–∏—Ä–∞–µ–º CSS...$(NC)"
	@$(NPM) run build:css
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

clean: ## –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	@echo "$(BLUE)–£–¥–∞–ª—è–µ–º __pycache__...$(NC)"
	@find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	@echo "$(BLUE)–£–¥–∞–ª—è–µ–º .pyc —Ñ–∞–π–ª—ã...$(NC)"
	@find . -name "*.pyc" -delete 2>/dev/null || true
	@echo "$(BLUE)–£–¥–∞–ª—è–µ–º –∫—ç—à...$(NC)"
	@rm -rf cache/renders/* 2>/dev/null || true
	@echo "$(BLUE)–£–¥–∞–ª—è–µ–º node_modules...$(NC)"
	@rm -rf node_modules 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
ifeq ($(DETECTED_OS),Windows)
	@powershell -ExecutionPolicy Bypass -File manage_tests.py
else
	@echo "$(YELLOW)–ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python manage_tests.py$(NC)"
	@echo "$(YELLOW)–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã –≤—Ä—É—á–Ω—É—é:$(NC)"
	@echo "  $(BLUE)python -m pytest tests/$(NC)"
endif

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
build: ## –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@$(NPM) run build:css
	@echo "$(GREEN)‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "$(GREEN)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	@$(ACTIVATE) && black app/ --line-length=120
	@$(ACTIVATE) && isort app/ --profile black
	@echo "$(GREEN)‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"

check: lint ## –ê–ª–∏–∞—Å –¥–ª—è lint
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
info: ## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(GREEN)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ$(NC)"
	@echo "$(BLUE)–û–°: $(DETECTED_OS)$(NC)"
	@echo "$(BLUE)Python: $(shell $(PYTHON) --version 2>/dev/null || echo '–ù–µ –Ω–∞–π–¥–µ–Ω')$(NC)"
	@echo "$(BLUE)Node.js: $(shell $(NPM) --version 2>/dev/null || echo '–ù–µ –Ω–∞–π–¥–µ–Ω')$(NC)"
	@echo "$(BLUE)–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $(shell if [ -d 'venv' ]; then echo '–°–æ–∑–¥–∞–Ω–æ'; else echo '–ù–µ —Å–æ–∑–¥–∞–Ω–æ'; fi)$(NC)"
	@echo "$(BLUE)–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python: $(shell if [ -f 'requirements.txt' ]; then echo 'requirements.txt –Ω–∞–π–¥–µ–Ω'; else echo '–ù–µ –Ω–∞–π–¥–µ–Ω'; fi)$(NC)"
	@echo "$(BLUE)–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Node.js: $(shell if [ -f 'package.json' ]; then echo 'package.json –Ω–∞–π–¥–µ–Ω'; else echo '–ù–µ –Ω–∞–π–¥–µ–Ω'; fi)$(NC)"
