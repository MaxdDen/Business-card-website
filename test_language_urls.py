#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤—ã—Ö URL –≤ CMS
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.site.middleware import _generate_language_urls

def test_language_url_generation():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤—ã—Ö URL"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤—ã—Ö URL...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    test_cases = [
        # (current_path, current_language, expected_urls)
        ("/cms/", "ru", {
            "ru": "/cms/",
            "en": "/cms/en/", 
            "ua": "/cms/ua/"
        }),
        ("/cms/", "en", {
            "ru": "/cms/",
            "en": "/cms/en/",
            "ua": "/cms/ua/"
        }),
        ("/cms/texts", "ru", {
            "ru": "/cms/texts",
            "en": "/cms/en/texts",
            "ua": "/cms/ua/texts"
        }),
        ("/cms/en/texts", "en", {
            "ru": "/cms/texts",
            "en": "/cms/en/texts", 
            "ua": "/cms/ua/texts"
        }),
        ("/cms/ua/images", "ua", {
            "ru": "/cms/images",
            "en": "/cms/en/images",
            "ua": "/cms/ua/images"
        }),
        ("/cms/seo", "ru", {
            "ru": "/cms/seo",
            "en": "/cms/en/seo",
            "ua": "/cms/ua/seo"
        })
    ]
    
    all_passed = True
    
    for i, (current_path, current_language, expected) in enumerate(test_cases, 1):
        print(f"\nüìã –¢–µ—Å—Ç {i}: {current_path} (—è–∑—ã–∫: {current_language})")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL
        actual = _generate_language_urls(current_path, current_language)
        
        print(f"   –û–∂–∏–¥–∞–µ–º—ã–µ URL:")
        for lang, url in expected.items():
            print(f"     {lang}: {url}")
        
        print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ URL:")
        for lang, url in actual.items():
            print(f"     {lang}: {url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
        test_passed = True
        for lang in expected:
            if actual.get(lang) != expected[lang]:
                print(f"   ‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è {lang}: –æ–∂–∏–¥–∞–ª–æ—Å—å {expected[lang]}, –ø–æ–ª—É—á–µ–Ω–æ {actual.get(lang)}")
                test_passed = False
                all_passed = False
        
        if test_passed:
            print(f"   ‚úÖ –¢–µ—Å—Ç {i} –ø—Ä–æ–π–¥–µ–Ω")
        else:
            print(f"   ‚ùå –¢–µ—Å—Ç {i} –ø—Ä–æ–≤–∞–ª–µ–Ω")
    
    print("\n" + "=" * 60)
    if all_passed:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
    
    return all_passed

if __name__ == "__main__":
    success = test_language_url_generation()
    sys.exit(0 if success else 1)
