#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ init.sql
"""

def fix_init_sql():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ init.sql"""
    
    with open('app/database/init.sql', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º init.sql...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
    problems = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ –∫–∞–≤—ã—á–∫–∏
    single_quotes = content.count("'")
    if single_quotes % 2 != 0:
        problems.append("–ù–µ—á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Å–∫–æ–±–∫–∏
    open_parens = content.count('(')
    close_parens = content.count(')')
    if open_parens != close_parens:
        problems.append(f"–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–∫–æ–±–æ–∫: {open_parens} –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö, {close_parens} –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å INSERT
    insert_count = content.count('INSERT OR IGNORE INTO texts')
    semicolon_count = content.count(');')
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  - INSERT –±–ª–æ–∫–æ–≤: {insert_count}")
    print(f"  - –ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö ); : {semicolon_count}")
    print(f"  - –û–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫: {single_quotes}")
    print(f"  - –û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: {open_parens}")
    print(f"  - –ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫: {close_parens}")
    
    if problems:
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        for problem in problems:
            print(f"  - {problem}")
        return False
    else:
        print("‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return True

if __name__ == "__main__":
    success = fix_init_sql()
    exit(0 if success else 1)
