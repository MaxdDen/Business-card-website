#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
"""

import requests
import re
import sys
import os

def debug_template_variables_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤...")
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–∫—Ä–∞–∏–Ω—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page = "/cms/ua/"
    print(f"\nüìã –°—Ç—Ä–∞–Ω–∏—Ü–∞: {page}")
    
    try:
        response = requests.get(f"{base_url}{page}", timeout=10)
        
        if response.status_code == 200:
            print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   üìä –†–∞–∑–º–µ—Ä HTML: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ò—â–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            variables = [
                "lang=",
                "language_urls=",
                "supported_languages=",
                "DEBUG INFO",
                "üö® DEBUG INFO üö®",
                "‚ñ≤ DEBUG INFO ‚ñ≤"
            ]
            
            print(f"   üîç –ü–æ–∏—Å–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:")
            for var in variables:
                if var in response.text:
                    print(f"     ‚úÖ {var} –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"     ‚ùå {var} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ò—â–µ–º –ª—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —è–∑—ã–∫–æ–≤
            lang_mentions = re.findall(r'[^a-zA-Z](en|ru|ua)[^a-zA-Z]', response.text)
            if lang_mentions:
                print(f"   üîç –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —è–∑—ã–∫–æ–≤: {set(lang_mentions)}")
            else:
                print(f"   ‚ö†Ô∏è  –£–ø–æ–º–∏–Ω–∞–Ω–∏—è —è–∑—ã–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ò—â–µ–º –ª—é–±—ã–µ —Å—Å—ã–ª–∫–∏
            all_links = re.findall(r'href="([^"]*)"', response.text)
            if all_links:
                print(f"   üîó –í—Å–µ–≥–æ —Å—Å—ã–ª–æ–∫: {len(all_links)}")
                for i, link in enumerate(all_links[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                    print(f"     {i+1}. {link}")
            else:
                print(f"   ‚ö†Ô∏è  –°—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        else:
            print(f"   ‚ùå –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    debug_template_variables_detailed()